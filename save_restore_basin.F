      subroutine save_croco_state()
      implicit none
# include "adinc.h"
# include "adparam.h"
      CALL PUSHINTEGER4(ad_step_counter)
      CALL PUSHINTEGER4(ad_cost_counter)
      CALL PUSHREAL8ARRAY(btflx, (lm+padd_x+2)*(mm+padd_e+2)*nt)
      CALL PUSHREAL8ARRAY(stflx, (lm+padd_x+2)*(mm+padd_e+2)*nt)
      CALL PUSHREAL8ARRAY(bvstr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(bustr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(svstr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(sustr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(ad_x_rv, n3d*npp)
      CALL PUSHREAL8ARRAY(ad_x_ru, n3d*npp)
      CALL PUSHREAL8ARRAY(a2d, n2d*nsa*npp)
      CALL PUSHREAL8ARRAY(dv_avg2, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(du_avg2, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(dv_avg1, (lm+padd_x+2)*(mm+padd_e+2)*5)
      CALL PUSHREAL8ARRAY(du_avg1, (lm+padd_x+2)*(mm+padd_e+2)*5)
      CALL PUSHREAL8ARRAY(zt_avg1, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(rvfrc_bak, (lm+padd_x+2)*(mm+padd_e+2)*2)
      CALL PUSHREAL8ARRAY(rufrc_bak, (lm+padd_x+2)*(mm+padd_e+2)*2)
      CALL PUSHREAL8ARRAY(rvfrc, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(rufrc, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(rhos, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(rhoa, (lm+padd_x+2)*(mm+padd_e+2))
      CALL PUSHREAL8ARRAY(rho, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(we, (lm+padd_x+2)*(mm+padd_e+2)*(n+1))
      CALL PUSHREAL8ARRAY(z_r, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(hz, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(hvom, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(huon, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(z_w, (lm+padd_x+2)*(mm+padd_e+2)*(n+1))
      CALL PUSHREAL8ARRAY(hz_bak, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL PUSHREAL8ARRAY(t, (lm+padd_x+2)*(mm+padd_e+2)*n*3*nt)
      CALL PUSHREAL8ARRAY(v, (lm+padd_x+2)*(mm+padd_e+2)*n*3)
      CALL PUSHREAL8ARRAY(u, (lm+padd_x+2)*(mm+padd_e+2)*n*3)
      CALL PUSHREAL8ARRAY(vbar, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL PUSHREAL8ARRAY(ubar, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL PUSHREAL8ARRAY(zeta, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL PUSHINTEGER4(may_day_flag)
      CALL PUSHBOOLEAN(synchro_flag)
      CALL PUSHINTEGER4(nbstep3d)
      CALL PUSHINTEGER4(nnew)
      CALL PUSHINTEGER4(nrhs)
      CALL PUSHINTEGER4(nstp)
      CALL PUSHINTEGER4(iif)
      CALL PUSHINTEGER4(knew)
      CALL PUSHINTEGER4(iic)
      CALL PUSHREAL8ARRAY(hinv, (lm+padd_x+2)*(mm+padd_e+2))

      write(*,*) 'save------'
      write(*,*) '----------'

      end subroutine save_croco_state

      subroutine restore_croco_state()
      implicit none
# include "adinc.h"
# include "adparam.h"
      integer ntrds,trd,my_first,my_last,tile,range

      CALL POPREAL8ARRAY(hinv, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPINTEGER4(iic)
      CALL POPINTEGER4(knew)
      CALL POPINTEGER4(iif)
      CALL POPINTEGER4(nstp)
      CALL POPINTEGER4(nrhs)
      CALL POPINTEGER4(nnew)
      CALL POPINTEGER4(nbstep3d)
      CALL POPBOOLEAN(synchro_flag)
      CALL POPINTEGER4(may_day_flag)
      CALL POPREAL8ARRAY(zeta, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL POPREAL8ARRAY(ubar, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL POPREAL8ARRAY(vbar, (lm+padd_x+2)*(mm+padd_e+2)*4)
      CALL POPREAL8ARRAY(u, (lm+padd_x+2)*(mm+padd_e+2)*n*3)
      CALL POPREAL8ARRAY(v, (lm+padd_x+2)*(mm+padd_e+2)*n*3)
      CALL POPREAL8ARRAY(t, (lm+padd_x+2)*(mm+padd_e+2)*n*3*nt)
      CALL POPREAL8ARRAY(hz_bak, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(z_w, (lm+padd_x+2)*(mm+padd_e+2)*(n+1))
      CALL POPREAL8ARRAY(huon, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(hvom, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(hz, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(z_r, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(we, (lm+padd_x+2)*(mm+padd_e+2)*(n+1))
      CALL POPREAL8ARRAY(rho, (lm+padd_x+2)*(mm+padd_e+2)*n)
      CALL POPREAL8ARRAY(rhoa, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(rhos, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(rufrc, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(rvfrc, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(rufrc_bak, (lm+padd_x+2)*(mm+padd_e+2)*2)
      CALL POPREAL8ARRAY(rvfrc_bak, (lm+padd_x+2)*(mm+padd_e+2)*2)
      CALL POPREAL8ARRAY(zt_avg1, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(du_avg1, (lm+padd_x+2)*(mm+padd_e+2)*5)
      CALL POPREAL8ARRAY(dv_avg1, (lm+padd_x+2)*(mm+padd_e+2)*5)
      CALL POPREAL8ARRAY(du_avg2, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(dv_avg2, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(a2d, n2d*nsa*npp)
      CALL POPREAL8ARRAY(ad_x_ru, n3d*npp)
      CALL POPREAL8ARRAY(ad_x_rv, n3d*npp)
      CALL POPREAL8ARRAY(sustr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(svstr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(bustr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(bvstr, (lm+padd_x+2)*(mm+padd_e+2))
      CALL POPREAL8ARRAY(stflx, (lm+padd_x+2)*(mm+padd_e+2)*nt)
      CALL POPREAL8ARRAY(btflx, (lm+padd_x+2)*(mm+padd_e+2)*nt)
      CALL POPINTEGER4(ad_cost_counter)
      CALL POPINTEGER4(ad_step_counter)

      write(*,*) 'restore+++'
      write(*,*) '++++++++++'

      end subroutine restore_croco_state
