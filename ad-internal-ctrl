#!/bin/bash
#OAR --project airsea-modeling
#OAR -l /nodes=1/cpu=1/core=1,walltime=30:00:00
################################################################################
case $1 in
  --env-ok)
    shift;;
  --fast)
    shift
    pwd=`pwd`
    . $pwd/.croco-guix-profile/etc/profile && $0 --env-ok $@
    ;;
  *)
    set -x
    # guix environment setup
    export PATH=/var/guix/profiles/per-user/root/current-guix/bin:$PATH
    export GUIX_DAEMON_SOCKET=guix://luke.u-ga.fr
    #[ -f /applis/site/guix-start.sh ] && . /applis/site/guix-start.sh
    #export PATH="$HOME/.guix-profile/bin${PATH:+:}$PATH"
    #export PATH="$HOME/.config/guix/current/bin:${PATH}"
    pwd=`pwd`
    rm -f $pwd/.croco-guix-profile
    packages="gcc-toolchain gfortran-toolchain make \
        netcdf netcdf-fortran \
        mpich openssh adjoinable-mpi \
        openblas lapack \
        openjdk coreutils binutils sed grep bash which time patch gdb"
    guix_cmd="guix time-machine --commit=398ec3c1e265a3f89ed07987f33b264db82e4080 -- time-machine --url=https://github.com/bremond/guix --branch=check-master-mpich --"
    exec $guix_cmd environment --root=$pwd/.croco-guix-profile --preserve='OAR*' --pure --ad-hoc $packages -- $0 --env-ok $@
    ;;
esac
################################################################################

set -x
set -e

if [ -f "$OAR_NODE_FILE" ]; then
  nbcores=`cat $OAR_NODE_FILE|wc -l`
  mpirun_cmd="mpirun -n $nbcores -launcher ssh -launcher-exec /usr/bin/oarsh --machinefile $OAR_NODE_FILE"
else
  nbcores=4
  mpirun_cmd="mpirun -n $nbcores"
fi

for d in AD /opt /usr/local $HOME/ $HOME/src $HOME/Download; do
    if [ -f ${d}/tapenade_3.16/bin/tapenade ]; then
      echo found tapenade in ${d}
      export TAPENADE=${d}/tapenade_3.16/bin/tapenade
      break
    fi
done


mkdir -p RunIC
cd RunIC

# 1. first run: build of obs.dat
cp -f ../AD/croco.internal-friction-obs.in .

cp -f ../OCEAN/cppdefs.h .
sed -i 's/define[\t ]*REGIONAL/undef REGIONAL/' cppdefs.h
#sed -i 's/define[\t ]*SOLVE3D/undef SOLVE3D/' cppdefs.h
sed -i 's/undef[\t ]*INTERNAL/define INTERNAL/' cppdefs.h
sed -i 's/undef[\t ]*TAPENADE/define TAPENADE/' cppdefs.h
sed -i 's/undef[\t ]*BATHY_MAY_BE_MODIFIED/define BATHY_MAY_BE_MODIFIED/' cppdefs.h
sed -i 's/undef[\t ]*PENALIZATION/define PENALIZATION/' cppdefs.h
#sed -i 's/undef[\t ]*TAPENADE/define TAPENADE\n# define AUTOTILING/' cppdefs.h
../OCEAN/jobcomp
cd Compile
make croco && mv croco ..
cd ..
rm -f obs.dat
./croco croco.internal-friction-obs.in

# 2. second run with obs.dat file
sed -i 's/undef[\t ]*BATHY_MAY_BE_MODIFIED/define BATHY_MAY_BE_MODIFIED/' cppdefs.h
sed -i 's/undef[\t ]*PENALIZATION/define PENALIZATION/' cppdefs.h
../OCEAN/jobcomp
cd Compile
make croco_adj && mv croco_adj ..
cd ..

#./croco_adc croco.internal-friction-obs.in
./croco_adj croco.internal-friction-obs.in
