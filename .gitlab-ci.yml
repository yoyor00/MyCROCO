# ci croco

stages:
  - bench

variables:
  TERM: "xterm-256color"
  DATAREG: "/data"

test_bench_debug:
  stage: bench
  tags:
    - ci.inria.fr
    - large
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_gfortran_parallel:1.0.0
  before_script:
    - cd $DATAREG ;
    - tar -xf ForCI-INRIA.tar.gz ;
  script:
    - cd $CI_PROJECT_DIR/BENCH
    - ./bench-croco.py --case @debug --variants @debug --jobcomp --rebuild --host host_ci --data-root-path $DATAREG/ForCI-INRIA
  artifacts:
    paths:
      - BENCH/results
      - BENCH/rundir
    when: always

test_bench_debug_ifort:
  stage: bench
  tags:
    - croco-vm-docker
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_intel_parallel:1.0.0
  before_script:
    - cd $DATAREG ;
    - tar -xf ForCI-INRIA.tar.gz ;
  script:
    - cd $CI_PROJECT_DIR/BENCH
    #note : --jobs 1 mandatory with intel compiler
    #note : check not available because sequentiel is not done here
    - ./bench-croco.py --case @ifort-debug --variants @ifort-debug --jobcomp --rebuild --host host_ci_ifort --jobs 1 --steps build,run --data-root-path $DATAREG/ForCI-INRIA
  artifacts:
    paths:
      - BENCH/results
      - BENCH/rundir
    when: always

test_bench_regional:
  stage: bench
  tags:
    - ci.inria.fr
    - large
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_gfortran_parallel:1.0.0
  before_script:
    - cd $DATAREG ;
    - tar -xf ForCI-INRIA.tar.gz ;
  script:
    - cd $CI_PROJECT_DIR/BENCH
    - ./bench-croco.py --case BENGUELA_VHR_TIDES_BULK --variants sequential,mpi-4 --jobcomp --rebuild --host host_ci --data-root-path $DATAREG/ForCI-INRIA
  artifacts:
    paths:
      - BENCH/results
      - BENCH/rundir
    when: always