# ci croco

stages:
  - run

variables:
  TERM: "xterm-256color"
  CVTKHOME: "$CI_PROJECT_DIR/CVTK/test_repro"
  PERFRSTHOME: "$CI_PROJECT_DIR/CVTK/test_perfrst"
  #
  DATADIR: "$CI_PROJECT_DIR/.datadir"
  PERFRSTDIR: "$CI_PROJECT_DIR/.perfrstdir"
  #
  DATAREG: "/data"
  #
  # use in case of local gitlab-runner; put VHR_CROCO_FILES_BCK at same level than croco
  # e.g : 
  # gcambon lpo 4096 mars  22 14:29 croco
  # gcambon lpo   43 juin  28  2023 VHR_CROCO_FILES_BCK
  #
  # In local job variables section, use of the local data
  DATAREG_LOCAL: "$CI_PROJECT_DIR/../../../../VHR_CROCO_FILES_BCK"
  # 
  # For parallel repro :
  # run local gitlab-runner using : gitlab-runner exec shell reg_run_[intel/gfortran] --env LOCALDATA="true" --timeout=7200
  # !! do not forget the flag LOCALDATA="true" !!
  #
  # For exact restart (aka perfrst) repro : 
  # run local gitlab-runner using : gitlab-runner exec shell reg_perfrst_[intel/gfortran] --env LOCALDATA="true" --timeout=7200
  # !! do not forget the flag LOCALDATA="true" !!
  #
  CI_CROCO_PWD: $(pwd)
  SOURCE_CROCO: "$CI_PROJECT_DIR/OCEAN"
  #
  # Here define the direcory with the input files
  # => for BENGUELA_VHR
  nest_position_reg: "79 137 37 117 3 3 3 3"
  # => for VORTEX if needed
  DATAVOR: ""
  nest_position_vort: ""
  # => for ANA if needed
  DATAANA: ""
  #

.gfortran_base:
  tags:
    - ci.inria.fr
    - large
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_gfortran_parallel:1.0.0
  variables:
    CI_FC: "gfortran"
    CI_MPIF90: "mpif90"
    CROCO_CI_MPIRUN: "mpirun.openmpi --allow-run-as-root"
    CVTKWORK: "$CI_PROJECT_DIR/.datawork_gfortran"
    PERFRSTWORK: "$CI_PROJECT_DIR/.perfrstwork_gfortran"

.intel_base:
  tags:
    - croco-vm-docker
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_intel_parallel:1.0.0
  variables:
    CI_FC: "ifort"
    CI_MPIF90: "mpiifort"
    CROCO_CI_MPIRUN: "mpirun"
    CVTKWORK: "$CI_PROJECT_DIR/.datawork_intel"
    PERFRSTWORK: "$CI_PROJECT_DIR/.perfrstwork_intel"

.ana_run_base:
  stage: run
  before_script:
    - mkdir -p $DATADIR
    - mkdir -p $CVTKWORK
    - cd $DATADIR
    - mkdir -p TESTROOT/KTEST
    - cd -
  script:
    - cd $CVTKHOME/Scripts_ana
    - ./create_link_master_ana.sh
    - cd -
    - cd $CVTKWORK/KTEST
    - ./mk_TESTALL.bash CONFIGURE_ANA ana
    - ./gather_recap.bash KTEST > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Compilation failure" KTEST_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Execution failure" KTEST_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Parallel reproducibility failed" KTEST_gather_recap_*_git*' > /dev/null 2>&1  
  artifacts:
    paths:
      - $CVTKWORK/ftp
      - $CVTKWORK/KTEST/*/*.log
    when: always

.vort_run_base:
  stage: run
  only:
    - schedules
  before_script:
  - mkdir -p $DATADIR
  - mkdir -p $CVTKWORK
  - cd $DATADIR
  - mkdir -p TESTROOT/VORT
  - cd -
  script:
    - cd $CVTKHOME/Scripts_vort
    - ./create_link_master_vort.sh
    - cd -
    - cd $CVTKWORK/VORT
    
    - ./mk_TESTALL.bash CONFIGURE_VORT vort
    - ./gather_recap.bash VORT > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Compilation failure" VORT_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Execution failure" VORT_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Parallel reproducibility failed" VORT_gather_recap_*_git*' > /dev/null 2>&1
  artifacts:
    paths:
       - $CVTKWORK/ftp
       - $CVTKWORK/VORT/*/*.log
    when: always

.reg_run_base:
  stage: run
  only:
    - schedules
  before_script:
    - |
      if [[ "$LOCALDATA" == "true" ]]; then
        export DATAREG=${DATAREG_LOCAL} ;
        echo "Use of local data " $DATAREG ;
      else  
        mkdir -p $DATAREG ;
        cd $DATAREG ;
        tar -xf ForCI-INRIA.tar.gz ;
        mv ForCI-INRIA/VHR_CROCO_FILES_BCK/* . ;
      fi   
    - mkdir -p $DATADIR
    - mkdir -p $CVTKWORK
    - cd $DATADIR
    - mkdir -p TESTROOT/REG
    - cd -
  script:
    - cd $CVTKHOME/Scripts_reg
    - ./create_link_master_reg.sh
    - cd -
    - cd $CVTKWORK/REG
    - ./mk_TESTALL.bash CONFIGURE_REG reg
    - ./gather_recap.bash REG > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Compilation failure" REG_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Execution failure" REG_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Parallel reproducibility failed" REG_gather_recap_*_git*' > /dev/null 2>&1
  artifacts:
    paths:
      - $CVTKWORK/ftp
      - $CVTKWORK/REG/*/*.log
    when: always 


.reg_perfrst_base:
  stage: run
  only:
    - schedules
  before_script:
    - |
      if [[ "$LOCALDATA" == "true" ]]; then
        export DATAREG=${DATAREG_LOCAL} ;
        echo "Use of local data " $DATAREG ;
      else  
        mkdir -p $DATAREG ;
        cd $DATAREG ;
        tar -xf ForCI-INRIA.tar.gz ;
        mv ForCI-INRIA/VHR_CROCO_FILES_BCK/* . ;
      fi   
    - mkdir -p $DATADIR
    - mkdir -p $CVTKWORK
    - cd $DATADIR
    - mkdir -p TESTROOT/REG
    - mkdir -p $PERFRSTDIR
    - mkdir -p $PERFRSTWORK
    - cd $PERFRSTDIR
    - cd -
  script:
    - cd $PERFRSTHOME/Scripts_reg_perfrst
    - ./create_link_master_reg_perfrst.sh
    - cd -
    - cd $PERFRSTWORK/REG
   
    - ./mk_TESTALL_perfrst.bash CONFIGURE_REG_PERFRST reg
    - ./gather_recap_perfrst.bash REG > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Compilation failure" REG_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Execution failure" REG_gather_recap_*_git*' > /dev/null 2>&1
    - /bin/sh -c '! grep -i "Restartabilty failed" REG_gather_recap_*_git*' > /dev/null 2>&1
  artifacts:
    paths:
      - $PERFRSTWORK/ftp
      - $PERFRSTWORK/REG/*/*.log
    when: always



ana_run_gfortran:
  extends:
    - .gfortran_base
    - .ana_run_base

ana_run_intel:
  extends:
    - .intel_base
    - .ana_run_base

vort_run_gfortran:
  extends:
    - .gfortran_base
    - .vort_run_base

vort_run_intel:
  extends:
    - .intel_base
    - .vort_run_base

reg_run_gfortran:
  extends:
    - .gfortran_base
    - .reg_run_base

reg_run_intel:
  extends:
    - .intel_base
    - .reg_run_base


reg_perfrst_gfortran:
  extends:
    - .gfortran_base
    - .reg_perfrst_base


reg_perfrst_intel:
  extends:
    - .intel_base
    - .reg_perfrst_base
  variables:
    RUNNER_SCRIPT_TIMEOUT: 120m
 
