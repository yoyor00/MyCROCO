# ci croco

stages:
  - bench
  - run

variables:
  TERM: "xterm-256color"
  CVTKHOME: "$CI_PROJECT_DIR/CVTK/test_repro"
  PERFRSTHOME: "$CI_PROJECT_DIR/CVTK/test_perfrst"
  #
  DATADIR: "$CI_PROJECT_DIR/.datadir"
  PERFRSTDIR: "$CI_PROJECT_DIR/.perfrstdir"
  #
  DATAREG: "/data"
  #
  # use in case of local gitlab-runner; put VHR_CROCO_FILES_BCK at same level than croco
  # e.g : 
  # gcambon lpo 4096 mars  22 14:29 croco
  # gcambon lpo   43 juin  28  2023 VHR_CROCO_FILES_BCK
  #
  # In local job variables section, use of the local data
  DATAREG_LOCAL: "$CI_PROJECT_DIR/../../../../VHR_CROCO_FILES_BCK"
  # 
  # For parallel repro :
  # run local gitlab-runner using : gitlab-runner exec shell reg_run_[intel/gfortran] --env LOCALDATA="true" --timeout=7200
  # !! do not forget the flag LOCALDATA="true" !!
  #
  # For exact restart (aka perfrst) repro : 
  # run local gitlab-runner using : gitlab-runner exec shell reg_perfrst_[intel/gfortran] --env LOCALDATA="true" --timeout=7200
  # !! do not forget the flag LOCALDATA="true" !!
  #
  CI_CROCO_PWD: $(pwd)
  SOURCE_CROCO: "$CI_PROJECT_DIR/OCEAN"
  #
  # Here define the direcory with the input files
  # => for BENGUELA_VHR
  nest_position_reg: "79 137 37 117 3 3 3 3"
  # => for VORTEX if needed
  DATAVOR: ""
  nest_position_vort: ""
  # => for ANA if needed
  DATAANA: ""
  #

.get_reg_data: &get_reg_data # reusable block as YAML sequence
  - |
    if [[ "$LOCALDATA" == "true" ]]; then
      export DATAREG=${DATAREG_LOCAL} ;
      echo "Use of local data " $DATAREG ;
    else  
      mkdir -p $DATAREG ;
      cd $DATAREG ;
      tar -xf ForCI-INRIA.tar.gz ;
      mv ForCI-INRIA/VHR_CROCO_FILES_BCK/* . ;
    fi   

test_bench:
  stage: bench
  tags:
    - ci.inria.fr
    - large
  image : registry.gitlab.inria.fr/croco-ocean/croco_docker/ubuntu_gfortran_parallel:1.0.0
  before_script:
    - *get_reg_data
  script:
    - cd BENCH
    - ./bench-croco.py --case BASIN --variants sequential,openmp-2,openmp-4,mpi-2,mpi-4 --jobcomp --rebuild --host host_ci
    - ./bench-croco.py --case REGIONAL --variants mpi-4 --jobcomp --rebuild --host host_ci
  artifacts:
    paths:
      - BENCH/results
      - BENCH/rundir
    when: always