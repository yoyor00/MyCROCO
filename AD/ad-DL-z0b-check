#!/bin/bash
################################################################################
case $1 in
  --env-ok)
    shift;;
  --fast)
    shift
    pwd=`pwd`
    . $pwd/.croco-guix-profile/etc/profile && $0 --env-ok $@
    ;;
  *)
    set -x
    MYDIR=`dirname $0`
    # guix environment setup
    # export PATH=/var/guix/profiles/per-user/root/current-guix/bin:$PATH
    # export GUIX_DAEMON_SOCKET=guix://luke.u-ga.fr
    [ -f /applis/site/guix-start.sh ] && . /applis/site/guix-start.sh
    #export PATH="$HOME/.guix-profile/bin${PATH:+:}$PATH"
    #export PATH="$HOME/.config/guix/current/bin:${PATH}"
    pwd=`pwd`
    rm -f $pwd/.croco-guix-profile
    packages="gcc-toolchain gfortran-toolchain make \
        netcdf netcdf-fortran \
        mpich openssh \
        openblas lapack \
        openjdk coreutils binutils sed grep bash which time patch gdb python"
    guix_cmd="guix time-machine -C AD/croco-2024-04-23.scm --"
    exec $guix_cmd environment -m $MYDIR/adjoinable-mpi.scm --root=$pwd/.croco-guix-profile --preserve='OAR*' --pure --ad-hoc $packages -- $0 --env-ok $@
    ;;
esac
################################################################################
set -x
set -e

case $1 in
  --exec)
    echo $@
    shift; exec $@;;
esac

if [ -f "$OAR_NODE_FILE" ]; then
  nbcores=`cat $OAR_NODE_FILE|wc -l`
  mpirun_cmd="mpirun -n $nbcores -launcher ssh -launcher-exec /usr/bin/oarsh --machinefile $OAR_NODE_FILE"
else
  nbcores=4
  mpirun_cmd="mpirun -n $nbcores"
fi

if [ -f AD/tapenade_3.16/bin/tapenade ]; then
    echo found tapenade in `pwd`/AD/tapenade_3.16/bin/tapenade
    export TAPENADE=`pwd`/AD/tapenade_3.16/bin/tapenade
fi

mkdir -p RunC
cd RunC

# 1. first run with ANA_INITIAL to build obs.nc file
cp ../AD/set_state_z0b_ctrl.F set_state.F
cp ../AD/save_restore_z0b_ctrl.F save_restore.F
cp ../AD/cost_fun_z0b_ctrl.F cost_fun.F
cp ../AD/init_control_z0b_ctrl.F init_control.F
cp ../AD/read_obs_z0b_ctrl.F read_obs.F

ln -sf ../AD/croco.in.AD-DL-Z0B-CTRL-OBS.in
cp -f ../AD/cppdefs-dl.h cppdefs.h
cp -f ../AD/param-dl.h param.h
sed -i 's/define[\t ]*REGIONAL/undef REGIONAL/' cppdefs.h
sed -i 's/undef[\t ]*AD_DL_Z0B_CTRL/define AD_DL_Z0B_CTRL/' cppdefs.h
sed -i 's/undef[\t ]*MPI/define MPI/g' cppdefs.h
sed -i 's/NP_XI=1/NP_XI=2/g' param.h
sed -i 's/NP_ETA=1/NP_ETA=2/g' param.h
../OCEAN/jobcomp
cd Compile
make croco && mv croco .. || exit 1
cd ..
rm -f obs.*.dat
$mpirun_cmd time -v ./croco croco.in.AD-DL-Z0B-CTRL-OBS.in
cp ftides_his.nc obs.nc

# 2. second run with restart and control with obs.nc file
ln -sf ../AD/croco.in.AD-DL-Z0B-CTRL.in
cp -f ../AD/cppdefs-dl.h cppdefs.h
sed -i 's/undef[\t ]*AMPI/define AMPI/' cppdefs.h
sed -i 's/define REGIONAL/undef REGIONAL/' cppdefs.h
sed -i 's/undef[\t ]*AD_DL_Z0B_CTRL/define AD_DL_Z0B_CTRL/' cppdefs.h
sed -i 's/define[\t ]*ANA_INITIAL/undef ANA_INITIAL/' cppdefs.h
../OCEAN/jobcomp
cd Compile
export CC=gcc
#make croco_adc && mv croco_adc .. || exit 1
#make croco_tgt && mv croco_tgt .. || exit 1
make croco_adj && mv croco_adj .. || exit 1
cd ..
#$mpirun_cmd time -v ./croco_adc croco.in.AD-DL-Z0B-CTRL.in
#$mpirun_cmd time -v ./croco_tgt croco.in.AD-DL-Z0B-CTRL.in
$mpirun_cmd time -v ./croco_adj croco.in.AD-DL-Z0B-CTRL.in
